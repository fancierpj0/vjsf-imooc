name: test-coverage

on: [push] # 什么时候触发(执行)这个任务

# jobs要执行的任务 要做什么
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]
        os: [ubuntu-latest, macos-latest, windows-latest] # 会在ubuntu-latest、macos-latest、 windows-latest 三个系统上使用node-version: [8.x, 10.x, 12.x] 这三个版本的node 去跑下面的命令

    steps:
      - uses: actions/checkout@v2 #https://github.com/actions/checkout;  把代码check到上面指定的操作系统去执行(?)
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run test:unit:cov
        env:
          CI: true # 给当前操作系统的环境里添加一个环境变量 CI (process.env.CI=true)

      # 增加一个任务
      - name: Upload coverage to Codecov # 增加的任务叫撒
        uses: codecov/codecov-action@v1 # codecov官方提供的
        with:
          flags: unittests #一个标识 标识是哪个任务的相关的覆盖率数据
          file: ./coverage/clover.xml #从哪里去读取覆盖率数据
          fail_ci_if_error: true #如果报错 就把整个ci停掉（3个操作系统 3个环境, 只要有一种组合错了 就都停掉）
